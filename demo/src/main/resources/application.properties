spring.application.name=demo
server.port=8989

## OAuth2 Client Properties for Google
#spring.security.oauth2.client.registration.google.client-id=your-google-client-id
#spring.security.oauth2.client.registration.google.client-secret=your-google-client-secret
#spring.security.oauth2.client.registration.google.scope=profile,email
#spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
#spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.google.client-name=Google
#
## Provider-specific properties
#spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
#spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
#spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
#spring.security.oauth2.client.provider.google.jwk-set-uri=https://www.googleapis.com/oauth2/v3/certs
#spring.security.oauth2.client.provider.google.user-name-attribute=sub

#Steps to Get Client ID and Client Secret:
#Go to the Google Developer Console.
#Create a new project and enable the OAuth 2.0 service.
#Under Credentials, create a new OAuth 2.0 client ID.
#Configure the redirect URI for your application (e.g., http://localhost:8080/login/oauth2/code/google).
#Use the provided Client ID and Client Secret in your application.properties.